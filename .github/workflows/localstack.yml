name: Localstack extension

on:
  push:
    branches:
      - main
      - feature/localstack-extension
    tags:
      - "v*.*.*"

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        run: corepack enable
      - name: prepare
        run: yarn install
      - name: build
        run: yarn build
      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: dist/
  server:
    runs-on: ubuntu-latest
    container: golang
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            goamd64: v1
            target_dir: linux-amd64
          - goos: linux
            goarch: arm64
            goarm64: v8.0
            target_dir: linux-arm64
          - goos: darwin
            goarch: amd64
            goamd64: v1
            target_dir: darwin-amd64
          - goos: darwin
            goarch: arm64
            goarm64: v8.0
            target_dir: darwin-arm64
    steps:
      - uses: actions/checkout@v4

      - name: Setup output directory
        run: mkdir -p localstack/sqs_admin/bin/${{ matrix.target_dir }}

      - name: Build binary
        working-directory: server
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          # Add architecture-specific environment variables conditionally
          if [ "${{ matrix.goamd64 }}" != "" ]; then export GOAMD64=${{ matrix.goamd64 }}; fi
          if [ "${{ matrix.goarm64 }}" != "" ]; then export GOARM64=${{ matrix.goarm64 }}; fi
          
          go build -buildvcs=false -o ../localstack/sqs_admin/bin/${{ matrix.target_dir }}/sqs-admin .
      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target_dir }}
          path: localstack/sqs_admin/bin/${{ matrix.target_dir }}/

  package:
    runs-on: ubuntu-latest
    needs: [frontend, server]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Organize artifacts
        run: |
          mkdir -p localstack/sqs_admin/bin/
          cp -r artifacts/binaries-* localstack/sqs_admin/bin/
          cp -r artifacts/frontend localstack/sqs_admin/bin/dist

      - name: Build Python package
        working-directory: localstack
        run: |
          make install
          make dist

      - name: Upload package artifact
        working-directory: localstack
        uses: actions/upload-artifact@v4
        with:
          name: extension
          path: dist/